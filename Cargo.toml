[package]
name = "esphome-rs-poc"
version = "0.0.3"
authors = ["sehraf"]
edition = "2021"
categories = ["embedded", "hardware-support", "network-programming"]
keywords = ["embedded", "idf", "esp-idf", "esp32c3", "esphome", "async", "smol"]
description = "A proof-of-concept rust implementation of the esphome api"
repository = "https://github.com/sehraf/esphome-rs-poc"
license = "MIT"
readme = "README.md"

[patch.crates-io]
smol = { git = "https://github.com/esp-rs-compat/smol" }
polling = { git = "https://github.com/esp-rs-compat/polling" }
socket2 = { git = "https://github.com/esp-rs-compat/socket2" }

[profile.release]
opt-level = "s"

[profile.dev]
# symbols are nice and they don't increase the size on Flash
debug = true
opt-level = "z"

[features]
default = ["native", "experimental", "mdns"]

# Enable this feature for the build to use ESP-IDF native tooling instead of PlatformIO under the hood
native = ["esp-idf-sys/native"]

mdns = []

has_bme280 = ["bme280"]
has_ccs811 = ["embedded-ccs811"]

experimental = [
    "esp-idf-svc/experimental",
    "esp-idf-hal/experimental",
    "embedded-svc/experimental",
]

[dependencies]
anyhow = { version = "1", features = ["backtrace"] }
log = "0.4"

esp-idf-sys = { version = "0.30.6", features = ["binstart"] }
esp-idf-svc = "0.37.2"
esp-idf-hal = "0.33.1"
embedded-svc = "0.17.2"
embedded-hal = "0.2"

convert_case = "0.4"

protobuf = "2"

embedded-ccs811 = { version = "0.2.0", optional = true }
# bme280 = { path = "../bme280-rs", optional = true }
bme280 = { version = "0.2.1", optional = true }

# only for async feature
smol = "1.2"
async-io = "1.6"
async-net = "1.6"
async-channel = "1.6"
futures-lite = "1.12"
# futures = { version = "^0.3", optional = true } 

[build-dependencies]
embuild = "0.28"
anyhow = "1"

protobuf-codegen-pure = "2.3"

# Future; might be possible once https://github.com/rust-lang/cargo/issues/9096 hits Cargo nightly:
# rust-esp32-ulp-hello = { path = "../rust-esp32-ulp-hello", artifact = "bin" }
